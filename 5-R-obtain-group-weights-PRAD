# Objects added to list:
# - lambdamults: group penalty multipliers
# - lambdamultvec: combined group penalty multipliers as p-length vector

# Annotation partitions
mirTable <- unique(PRAD$mirLookup[, c("miRNA_ID", "chromosome", "region")])
mirIndex <- match(PRAD$mirs, mirTable$miRNA_ID)
mirRegion <- split(1:length(PRAD$mirs), PRAD$mirLookup$region[mirIndex])
mirRegion <- mirRegion[lapply(mirRegion, length) > 20]
mirChromo <- split(1:length(PRAD$mirs), PRAD$mirLookup$chromosome[mirIndex])
mirChromo <- mirChromo[lapply(mirChromo, length) > 20]

# Distributional partitions
mirNorm <- sweep(PRAD$mirRaw, 2, mirNF, "/")
means <- rowMeans(mirNorm)
sds <- apply(mirNorm, 1, sd)
mirCounts <- CreatePartition(means, ngroup=6)
mirSDs <- CreatePartition(sds, ngroup=6)

# Create partitions list
parts <- list(mirCounts=mirCounts, 
              mirSDs=mirSDs,
              mirChromo=mirChromo,
              mirRegion=mirRegion)

# Optimize model with partitions
grro <- grridge(highdimdata=mirDat, 
                response=as.factor(!ctrlIndex), 
                partitions=parts, 
                monotone=c(TRUE, TRUE, FALSE, FALSE),
                innfold=5,
                trace=TRUE)

# Add values to list and remove old objects
PRAD$lambdamults=grro$lambdamults
PRAD$lambdamultvec=grro$lambdamultvec[, "GroupRegul"]
rm(mirTable, mirIndex, mirRegion, mirChromo, mirNorm, means, sds, mirCounts, mirSDs, parts, grro)
