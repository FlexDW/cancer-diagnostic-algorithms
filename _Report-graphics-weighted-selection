require(glmnet)
require(MASS)
require(car)

set.seed(28920)

mu1 <- c(2, 4)
mu2 <- c(5, 2)
SIG1 <- matrix(c(1, -0.5, -0.5, 2), 2)
SIG2 <- matrix(c(3, -0.1, -0.1, 0.5), 2)

# IMAGE: BALANCED
png(filename="Diagrams/trivial_example_unequal_COV.png", width=480)
N <- c(100, 100)
X <- rbind(mvrnorm(N[1], mu=mu1, Sigma=SIG1), mvrnorm(N[2], mu=mu2, Sigma=SIG2))
X <- scale(X)
Y <- c(rep(0, N[1]), rep(1, N[2]))
plot(X, pch=Y*2+1, col=Y+1, cex=0.5, cex.main=0.9, asp=1, 
     main="Trivial example - Equal Proportions", xlab="", ylab="", xaxt='n', yaxt='n')
title(xlab="x1", ylab="x2", line=1)
rad <- cumsum(rep(0.5, 4))
for(r in rad){
  ellipse(center=mu1, shape=SIG1, col=1, lwd=1, radius=r)
  ellipse(center=mu2, shape=SIG2, col=2, lwd=1, radius=r)
}
glmo1 <- glmnet(y=Y, x=X, alpha=1, family="binomial")
line <- coef(glmo1)[1:2, ncol(glmo1$beta)]/-coef(glmo1)[3, ncol(glmo1$beta)]
abline(line, col="purple", lty=2)
title(sub=paste("Variable selected by LASSO: x", which.max(rowSums(glmo1$beta != 0)), sep=""),
      cex.sub=0.9, line=3)
legend("topright", legend=c("Tumor", "Healthy"), pch=c(3,1), col=c("red", "black"), cex=0.8)
dev.off()

# IMAGE: UNBALANCED
png(filename="Diagrams/trivial_example_unbalanced.png", width=480*2)
par(mfrow=c(1,2))
N <- c(100, 1000)
X <- rbind(mvrnorm(N[1], mu=mu1, Sigma=SIG1), mvrnorm(N[2], mu=mu2, Sigma=SIG2))
X <- scale(X)
Y <- c(rep(0, N[1]), rep(1, N[2]))
plot(X, pch=Y*2+1, col=Y+1, cex=0.5, cex.main=0.9, asp=1, 
     main="Unbalanced (Cases 10: Controls 1)", xlab="", ylab="", xaxt='n', yaxt='n')
title(xlab="x1", ylab="x2", line=1)
glmo2 <- glmnet(y=Y, x=X, alpha=1, family="binomial")
line <- coef(glmo2)[1:2, ncol(glmo2$beta)]/-coef(glmo2)[3, ncol(glmo2$beta)]
abline(line, col="purple", lty=2)
title(sub=paste("Variable selected by LASSO: x", which.max(rowSums(glmo2$beta != 0)), sep=""),
      cex.sub=0.9, line=3)
legend("topright", legend=c("Tumor", "Healthy"), pch=c(3,1), col=c("red", "black"), cex=0.8)

N <- c(1000, 100)
X <- rbind(mvrnorm(N[1], mu=mu1, Sigma=SIG1), mvrnorm(N[2], mu=mu2, Sigma=SIG2))
Y <- c(rep(0, N[1]), rep(1, N[2]))
plot(X, pch=Y*2+1, col=Y+1, cex=0.5, cex.main=0.9, asp=1, 
     main="Unbalanced (Cases 1: Controls 10)", xlab="", ylab="", xaxt='n', yaxt='n')
title(xlab="x1", ylab="x2", line=1)
glmo3 <- glmnet(y=Y, x=X, alpha=1, family="binomial")
line <- coef(glmo3)[1:2, ncol(glmo3$beta)]/-coef(glmo3)[3, ncol(glmo3$beta)]
abline(line, col="purple", lty=2)
title(sub=paste("Variable selected by LASSO: x", which.max(rowSums(glmo3$beta != 0)), sep=""),
      cex.sub=0.9, line=3)
legend("topright", legend=c("Tumor", "Healthy"), pch=c(3,1), col=c("red", "black"), cex=0.8)
dev.off()


# IMAGE: MARGINAL DISTRIBUTIONS
# X1 Marginal
mu1.C <- 2
mu1.T <- 5
sd1.C <- 1
sd1.T <- 3

# X2 Marginal
mu2.C <- 4
mu2.T <- 2
sd2.C <- 2
sd2.T <- 0.5

png(filename="Diagrams/trivial_example_marginals.png", width=480*2)
par(mfrow=c(1,2))
x1range <- range(X[, 1])
curve(dnorm(x, mean=mu1.C, sd=sd1.C), from=x1range[1], to=x1range[2],
      main="x1 marginal distribution", xaxt='n', yaxt='n', xlab="", ylab="",
      col="black")
curve(dnorm(x, mean=mu1.T, sd=sd1.T), add=T, col="red")
title(xlab="x1", cex.sub=0.9, line=1)
title(ylab="density", cex.sub=0.9, line=1)
specificity <- qnorm(0.9, mean=mu1.C, sd=sd1.C)
sensitivity <- round(1 - pnorm(specificity, mean=mu1.T, sd=sd1.T), 2)
dmax <- max(c(dnorm(X[, 1], mean=mu1.C, sd=sd1.C), dnorm(X[, 1], mean=mu1.T, sd=sd1.T)))
abline(v=specificity, lty=3)
text(x=specificity, y=dmax, labels=paste("Specificity = 0.9, sensitivity =", sensitivity), pos=4, cex=0.9)

x2range <- range(X[, 2])
curve(dnorm(x, mean=mu2.T, sd=sd2.T), from=x2range[1], to=x2range[2],
      main="x2 marginal distribution", xaxt='n', yaxt='n', xlab="", ylab="",
      col="red")
curve(dnorm(x, mean=mu2.C, sd=sd2.C), add=T, col="black")
title(xlab="x2", cex.sub=0.9, line=1)
title(ylab="density", cex.sub=0.9, line=1)
specificity <- qnorm(0.1, mean=mu2.C, sd=sd2.C)
sensitivity <- round(pnorm(specificity, mean=mu2.T, sd=sd2.T), 2)
dmax <- max(c(dnorm(X[, 2], mean=mu2.C, sd=sd2.C), dnorm(X[, 2], mean=mu2.T, sd=sd2.T)))
abline(v=specificity, lty=3)
text(x=specificity, y=dmax, labels=paste("Specificity = 0.9, sensitivity =", sensitivity), pos=4, cex=0.9)
dev.off()
