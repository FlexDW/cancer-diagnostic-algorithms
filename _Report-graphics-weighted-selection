require(glmnet)
require(MASS)

set.seed(28920)

mu.C <- c(2, 4)
mu.T <- c(5, 2)
SIG.C <- matrix(c(1, -0.5, -0.5, 2), 2)
SIG.T <- matrix(c(3, -0.1, -0.1, 0.5), 2)

# IMAGE: BALANCED
png(filename="Diagrams/trivial_example_unequal_COV.png", width=480)
N1 <- c(100, 100)
X1 <- rbind(mvrnorm(N1[1], mu=mu.C, Sigma=SIG.C), mvrnorm(N1[2], mu=mu.T, Sigma=SIG.T))
Y1 <- c(rep(0, N1[1]), rep(1, N1[2]))
X1 <- scale(X1)
plot(X1, pch=Y1*2+1, col=Y1+1, cex=0.5, cex.main=0.9, asp=1, 
     main="Scenario 1 - Equal Proportions", xlab="", ylab="", xaxt='n', yaxt='n')
title(xlab="x1", ylab="x2", line=1)
glmo1 <- glmnet(y=Y1, x=X1, alpha=1, family="binomial")
line1 <- coef(glmo1)[1:2, ncol(glmo1$beta)]/-coef(glmo1)[3, ncol(glmo1$beta)]
abline(line1, col="purple", lty=2)
title(sub=paste("Variable selected by LASSO: x", which.max(rowSums(glmo1$beta != 0)), sep=""),
      cex.sub=0.9, line=3)
legend("topright", legend=c("Tumor", "Healthy"), pch=c(3,1), col=c("red", "black"), cex=0.8)
dev.off()

# IMAGE: UNBALANCED
png(filename="Diagrams/trivial_example_unbalanced.png", width=480*2)
par(mfrow=c(1,2))
N2 <- c(100, 1000)
X2 <- rbind(mvrnorm(N2[1], mu=mu.C, Sigma=SIG.C), mvrnorm(N2[2], mu=mu.T, Sigma=SIG.T))
X2 <- scale(X2)
Y2 <- c(rep(0, N2[1]), rep(1, N2[2]))
plot(X2, pch=Y2*2+1, col=Y2+1, cex=0.5, cex.main=0.9, asp=1, 
     main="Scenario 2 (Cases 10: Controls 1)", xlab="", ylab="", xaxt='n', yaxt='n')
title(xlab="x1", ylab="x2", line=1)
glmo2 <- glmnet(y=Y2, x=X2, alpha=1, family="binomial")
line2 <- coef(glmo2)[1:2, ncol(glmo2$beta)]/-coef(glmo2)[3, ncol(glmo2$beta)]
abline(line2, col="purple", lty=2)
title(sub=paste("Variable selected by LASSO: x", which.max(rowSums(glmo2$beta != 0)), sep=""),
      cex.sub=0.9, line=3)
legend("topright", legend=c("Tumor", "Healthy"), pch=c(3,1), col=c("red", "black"), cex=0.8)

N3 <- c(1000, 100)
X3 <- rbind(mvrnorm(N3[1], mu=mu.C, Sigma=SIG.C), mvrnorm(N3[2], mu=mu.T, Sigma=SIG.T))
Y3 <- c(rep(0, N3[1]), rep(1, N3[2]))
plot(X3, pch=Y3*2+1, col=Y3+1, cex=0.5, cex.main=0.9, asp=1, 
     main="Scenario 3 (Cases 1: Controls 10)", xlab="", ylab="", xaxt='n', yaxt='n')
title(xlab="x1", ylab="x2", line=1)
glmo3 <- glmnet(y=Y3, x=X3, alpha=1, family="binomial")
line3 <- coef(glmo3)[1:2, ncol(glmo3$beta)]/-coef(glmo3)[3, ncol(glmo3$beta)]
abline(line3, col="purple", lty=2)
title(sub=paste("Variable selected by LASSO: x", which.max(rowSums(glmo3$beta != 0)), sep=""),
      cex.sub=0.9, line=3)
legend("topright", legend=c("Tumor", "Healthy"), pch=c(3,1), col=c("red", "black"), cex=0.8)
dev.off()


# IMAGE: REG PATH
png(filename="Diagrams/unbalanced_regularization_path.png", width=480*2)
par(mfrow=c(1, 2))
plot(glmo2, main="Scenario 2 - Regularization Path", col=c("blue", "magenta"))
legend("topright", legend=c("x1", "x2"), lty=1, col=c("blue", "magenta"), cex=0.8)
plot(glmo3, main="Scenario 3 - Regularization Path", col=c("blue", "magenta"))
legend("topright", legend=c("x1", "x2"), lty=1, col=c("blue", "magenta"), cex=0.8)
dev.off()

png(filename="Diagrams/weighted_regularization_path.png", width=480*3)
par(mfrow=c(1, 3))
glmo4 <- glmnet(y=Y1, x=X1, alpha=1, family="binomial", weights=c(rep(10, N1[1]), rep(1, N1[2])))
glmo5 <- glmnet(y=Y1, x=X1, alpha=1, family="binomial", weights=c(rep(1, N1[1]), rep(10, N1[2])))
plot(glmo1, main="Scenario 1 - Balanced", col=c("blue", "magenta"), cex.main=1.4)
legend("topright", legend=c("x1", "x2"), lty=1, col=c("blue", "magenta"), cex=1.2)
plot(glmo4, main="Scenario 1 - Weighted to Controls", col=c("blue", "magenta"), cex.main=1.2)
legend("topright", legend=c("x1", "x2"), lty=1, col=c("blue", "magenta"), cex=1.4)
plot(glmo5, main="Scenario 1 - Weighted to Cases", col=c("blue", "magenta"), cex.main=1.2)
legend("topright", legend=c("x1", "x2"), lty=1, col=c("blue", "magenta"), cex=1.4)
dev.off()


# IMAGE: MARGINAL DISTRIBUTIONS
# X1 Marginal
mu1.C <- 2
mu1.T <- 5
sd1.C <- 1
sd1.T <- 3

# X2 Marginal
mu2.C <- 4
mu2.T <- 2
sd2.C <- 2
sd2.T <- 0.5

N <- c(1000, 1000)
X <- rbind(mvrnorm(N[1], mu=mu.C, Sigma=SIG.C), mvrnorm(N[2], mu=mu.T, Sigma=SIG.T))

png(filename="Diagrams/trivial_example_marginals.png", width=480*2)
par(mfrow=c(1,2))
x1range <- range(X[, 1])
curve(dnorm(x, mean=mu1.C, sd=sd1.C), from=x1range[1], to=x1range[2],
      main="x1 marginal distribution", xaxt='n', yaxt='n', xlab="", ylab="",
      col="black")
curve(dnorm(x, mean=mu1.T, sd=sd1.T), add=T, col="red")
title(xlab="x1", cex.sub=0.9, line=1)
title(ylab="density", cex.sub=0.9, line=1)
specificity <- qnorm(0.9, mean=mu1.C, sd=sd1.C)
sensitivity <- round(1 - pnorm(specificity, mean=mu1.T, sd=sd1.T), 2)
dmax <- max(c(dnorm(X[, 1], mean=mu1.C, sd=sd1.C), dnorm(X[, 1], mean=mu1.T, sd=sd1.T)))
abline(v=specificity, lty=3)
text(x=specificity, y=dmax, labels=paste("Specificity = 0.9, sensitivity =", sensitivity), pos=4, cex=0.9)

x2range <- range(X[, 2])
curve(dnorm(x, mean=mu2.T, sd=sd2.T), from=x2range[1], to=x2range[2],
      main="x2 marginal distribution", xaxt='n', yaxt='n', xlab="", ylab="",
      col="red")
curve(dnorm(x, mean=mu2.C, sd=sd2.C), add=T, col="black")
title(xlab="x2", cex.sub=0.9, line=1)
title(ylab="density", cex.sub=0.9, line=1)
specificity <- qnorm(0.1, mean=mu2.C, sd=sd2.C)
sensitivity <- round(pnorm(specificity, mean=mu2.T, sd=sd2.T), 2)
dmax <- max(c(dnorm(X[, 2], mean=mu2.C, sd=sd2.C), dnorm(X[, 2], mean=mu2.T, sd=sd2.T)))
abline(v=specificity, lty=3)
text(x=specificity, y=dmax, labels=paste("Specificity = 0.9, sensitivity =", sensitivity), pos=4, cex=0.9)
dev.off()

